<idea-plugin>
    <id>com.wd.GoGenerator</id>
    <name>GoGenerator</name>
    <vendor email="lerder@foxmail.com" url="">lww</vendor>

    <description><![CDATA[
        The GoLang code generator generates code based on the Gin + Gorm framework and manages dependencies using go modules. <br/>
        It can generate code with one click according to the MySQL database table. <br/>
        It can generate configuration files with one click, support log file recording, Redis, scheduled tasks, Swagger, send emails, read yaml configuration files (support packing configuration files into executable programs), cross-domain, HTTPS, JSON formatted return responses.<br/>
        <br/>
        GoLang 代码生成器，基于 Gin + Gorm 框架生成代码，使用 go modules 管理依赖。 <br/>
        可以根据mysql数据库表一键生成代码，<br/>
        可以一键生成配置文件，支持日志文件记录，Redis，定时任务，Swagger，发送邮件，yaml 配置文件读取（支持配置文件打包进可执行程序），跨域，HTTPS，JSON格式化返回响应 <br/>
        <br/>
        author: lww <br/>
        email: lerder@foxmail.com <br/>
    ]]></description>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <!-- uncomment to enable plugin in all products
    <depends>com.intellij.modules.lang</depends>
    -->
    <depends>com.intellij.modules.platform</depends>

    <extensions defaultExtensionNs="com.intellij">
        <!-- Add your extensions here -->
        <!--持久化-->
        <projectService serviceImplementation="com.wd.storage.GenerateConfig"/>

        <notification.group id="MyPluginNotificationGroup"/>
    </extensions>

    <actions>
        <!-- Add your actions here -->
        <action id="GoGeneratorId" class="com.wd.action.GoGeneratorAction" text="GoGenerator" description="GoGenerator" icon="/icons/golang.svg">
            <add-to-group group-id="ToolsMenu" anchor="first"/>
            <add-to-group group-id="MainToolBar" anchor="last"/>
        </action>

    </actions>
</idea-plugin>